# Test info

- Name: test 1
- Location: C:\Users\khari\OneDrive\Desktop\Automations Playwright\PlanIt_Automation\tests\tes1.spec.ts:3:5

# Error details

```
Error: expect(received).toBeFalsy()

Received: true
    at C:\Users\khari\OneDrive\Desktop\Automations Playwright\PlanIt_Automation\tests\tes1.spec.ts:14:36
```

# Page snapshot

```yaml
- link "Jupiter Toys":
  - /url: "#"
  - img
  - text: Jupiter Toys
- list:
  - listitem:
    - link "Home":
      - /url: "#/home"
  - listitem:
    - link "Shop":
      - /url: "#/shop"
  - listitem:
    - link "Contact":
      - /url: "#/contact"
- list:
  - listitem:
    - link "Login":
      - /url: ""
  - listitem:
    - link "Cart (0)":
      - /url: "#/cart"
- strong: We welcome your feedback
- text: "- but we won't get it unless you complete the form correctly."
- group:
  - text: Forename *
  - textbox "Forename *": Raheem
  - text: Surname
  - textbox "Surname": Rosenbaum
  - text: Email *
  - textbox "Email *": RaheemRosenbaum@gmail.com
  - text: Your email address will only be used in reply to this message. We
  - strong: never
  - text: send spam email or give your email address to others. Telephone
  - textbox "Telephone": 1-490-717-8164 x252
  - text: Please enter a valid telephone number Only provide your telephone number
  - emphasis: if
  - text: you want us to contact you this way. Message *
  - textbox "Message *": Undique pauper tenuis caelestis vinitor dapifer tabesco. Abundans coma copia vos stultus. Ultio provident theca autem sequi.
- link "Submit":
  - /url: ""
- separator
- contentinfo:
  - paragraph: Â© Jupiter Toys 2025
```

# Test source

```ts
   1 | import { test, expect } from "../fixtures/pomFixtures";
   2 |
   3 | test("test 1", async ({ page, landingPage, contactFormPage }) => {
   4 |   await landingPage.goto();
   5 |   await page.waitForLoadState("networkidle");
   6 |   const isPageTitleVisible = await landingPage.isPageTitleVIsible();
   7 |   await expect(isPageTitleVisible).toBeTruthy();
   8 |   await landingPage.navBar("Contact");
   9 |   await contactFormPage.submitContactForm();
  10 |   const isErrorBannerVisible = await contactFormPage.errorBanner.isVisible();
  11 |   await expect(isErrorBannerVisible).toBeTruthy();
  12 |   await contactFormPage.fillContactForm();
  13 |   const hasValidationError = await contactFormPage.hasAnyValidationError();
> 14 |   await expect(hasValidationError).toBeFalsy();
     |                                    ^ Error: expect(received).toBeFalsy()
  15 | });
  16 |
```